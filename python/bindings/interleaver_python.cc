/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(interleaver.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(246800f320d55c7ad5d0bce391f58e86)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <symbolmapping/interleaver.h>
// pydoc.h is automatically generated in the build directory
#include <interleaver_pydoc.h>


template <typename T>
void bind_interleaver_template(py::module& m, const char* classname)
{
    using interleaver = ::gr::symbolmapping::interleaver<T>;

    py::class_<interleaver,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<interleaver>>(m, classname)
        .def(py::init(&::gr::symbolmapping::interleaver<T>::make),
             py::arg("interleaver_indices"),
             py::arg("is_packet"),
             py::arg("interleaver_mode"));
}

void bind_interleaver(py::module& m)
{
    bind_interleaver_template<uint8_t>(m, "interleaver_bb");
    bind_interleaver_template<float>(m, "interleaver_ff");
}
